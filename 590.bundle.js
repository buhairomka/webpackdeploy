(self.webpackChunk_5=self.webpackChunk_5||[]).push([[590],{617:(e,l,r)=>{"use strict";r.d(l,{Z:()=>n});const n=function(e,l=null,r=null,n=null,t=null){let i=document.createElement(e);if(r&&r.split(" ").forEach((e=>{i.classList.add(e)})),l&&(i.innerHTML=l),t&&(i.id=t),n)for(let e in n)i.setAttribute(e,n[e]);return i.outerHTML}},590:(e,l,r)=>{"use strict";r.r(l),r.d(l,{default:()=>t});var n=r(617);const t=function(){let e=document.querySelector("main .container"),l=document.querySelector("header");fetch("https://server-for-okr.herokuapp.com/").then((e=>(console.log(e),e.json()))).then((r=>{l.innerHTML=(0,n.Z)("div",(0,n.Z)("div",(0,n.Z)("div",(0,n.Z)("div",null,"wrapper_slides")+(0,n.Z)("button","<","but",null,"left")+(0,n.Z)("button",">","but",null,"right"),"carousel"),"sales"),"container"),r.sale.forEach((e=>{l.querySelector(".wrapper_slides").innerHTML+=(0,n.Z)("div",(0,n.Z)("a",(0,n.Z)("img",null,null,{src:e.img})+(0,n.Z)("h3",e.slider_title),null,{href:e.url}),"item_sales")})),e.innerHTML=(0,n.Z)("h3","RECOMENDED")+(0,n.Z)("div",(0,n.Z)("div",(0,n.Z)("div",null,"wrapper"),"carousel"),"catalog slides"),r.slides.forEach((l=>{e.querySelector(".wrapper").innerHTML+=(0,n.Z)("div",(0,n.Z)("a",(0,n.Z)("img",null,null,{src:l.img,alt:l.model}),null,{href:l.url})+(0,n.Z)("br")+(0,n.Z)("h2",l.brand)+(0,n.Z)("br")+(0,n.Z)("h3",l.model)+(0,n.Z)("br")+(0,n.Z)("p",l.price),"item",null,"item_"+l.id)}))}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,