(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{12:function(e,t,n){"use strict";n.r(t);var o=n(13);t.default=function(e){let t=document.querySelector("main .container");document.querySelector("header").innerHTML="",fetch("https://server-for-okr.herokuapp.com/").then(e=>(console.log(e),e.json())).then(n=>{let c=e.split("_")[1];console.log("сюда нам надо",c);for(let e in n)n[e].forEach(e=>{e.id==c&&(t.innerHTML=Object(o.a)("div",Object(o.a)("img",null,null,{src:e.img})+Object(o.a)("div",Object(o.a)("h3",e.model)+Object(o.a)("p",e.description)+Object(o.a)("button","To Cart "+e.price,"addbutton",null,c),"content"),"content_wrapper"))})})}},13:function(e,t,n){"use strict";t.a=function(e,t=null,n=null,o=null,c=null){let r=document.createElement(e);if(n){n.split(" ").forEach(e=>{r.classList.add(e)})}if(t&&(r.innerHTML=t),c&&(r.id=c),o)for(let e in o)r.setAttribute(e,o[e]);return r.outerHTML}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3cy9wcm9kdWN0cy52aWV3LmpzIiwid2VicGFjazovLy8uL3ZpZXdzL2NyZWF0b3IuanMiXSwibmFtZXMiOlsidmlld05hbWUiLCJtYWluIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJIVE1MIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwianNvbiIsImRhdGEiLCJpdGVtaWQiLCJzcGxpdCIsImtleSIsImZvckVhY2giLCJwcm9kdWN0IiwiaWQiLCJ0YWciLCJjb250ZW50Iiwic2V0X2NsYXNzIiwic2V0X2F0dHIiLCJzZXRpZCIsImVsIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzbmFtZSIsImNsYXNzTGlzdCIsImFkZCIsInNldEF0dHJpYnV0ZSIsIm91dGVySFRNTCJdLCJtYXBwaW5ncyI6InlGQUFBLG1CQXVDZSxVQXBDZixTQUFjQSxHQUNWLElBQUlDLEVBQU9DLFNBQVNDLGNBQWMsbUJBQ2xDRCxTQUFTQyxjQUFjLFVBQVVDLFVBQVksR0FHN0NDLE1BQU0seUNBRURDLEtBQU1DLElBQ0hDLFFBQVFDLElBQUlGLEdBQ0xBLEVBQVNHLFNBRW5CSixLQUFNSyxJQUNILElBQUlDLEVBQVNaLEVBQVNhLE1BQU0sS0FBSyxHQUNqQ0wsUUFBUUMsSUFBSSxnQkFBaUJHLEdBQzdCLElBQUssSUFBSUUsS0FBT0gsRUFDWkEsRUFBS0csR0FBS0MsUUFBU0MsSUFDWEEsRUFBUUMsSUFBTUwsSUFDZFgsRUFBS0csVUFDRCxXQURhLENBRVQsTUFFQSxZQUFXLE1BQU8sS0FBTSxLQUFNLENBQUMsSUFBT1ksRUFBYSxNQUNuRCxZQUFXLE1BQ1AsWUFBVyxLQUFNQSxFQUFlLE9BQ2hDLFlBQVcsSUFBS0EsRUFBcUIsYUFDckMsWUFBVyxTQUFVLFdBQWFBLEVBQWUsTUFBRyxZQUFhLEtBQU1KLEdBQ3JFLFdBQ0osMEIsZ0NDUG5CLElBckJmLFNBQW9CTSxFQUFLQyxFQUFVLEtBQU1DLEVBQVksS0FBTUMsRUFBVyxLQUFNQyxFQUFRLE1BQ2hGLElBQUlDLEVBQUtyQixTQUFTc0IsY0FBY04sR0FDaEMsR0FBSUUsRUFBVyxDQUNBQSxFQUFVUCxNQUFNLEtBQ3RCRSxRQUFTVSxJQUNWRixFQUFHRyxVQUFVQyxJQUFJRixLQVN6QixHQU5JTixJQUNBSSxFQUFHbkIsVUFBWWUsR0FFZkcsSUFDQUMsRUFBR04sR0FBS0ssR0FFUkQsRUFDQSxJQUFLLElBQUlQLEtBQU9PLEVBQ1pFLEVBQUdLLGFBQWFkLEVBQUtPLEVBQVNQLElBR3RDLE9BQU9TLEVBQUdNIiwiZmlsZSI6IjYuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERPTWNyZWF0b3IgZnJvbSAnLi9jcmVhdG9yLmpzJztcblxuXG5mdW5jdGlvbiB2aWV3KHZpZXdOYW1lKSB7XG4gICAgbGV0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtYWluIC5jb250YWluZXInKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoZWFkZXInKS5pbm5lckhUTUwgPSAnJztcblxuXG4gICAgZmV0Y2goJ2h0dHBzOi8vc2VydmVyLWZvci1va3IuaGVyb2t1YXBwLmNvbS8nLClcbiAgICAgICAgLy9odHRwczovL2FxdWVvdXMtc2hlbGYtNTQ4NDguaGVyb2t1YXBwLmNvbS9cbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgbGV0IGl0ZW1pZCA9IHZpZXdOYW1lLnNwbGl0KCdfJylbMV07XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0YHRjtC00LAg0L3QsNC8INC90LDQtNC+JywgaXRlbWlkKTtcbiAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgZGF0YVtrZXldLmZvckVhY2goKHByb2R1Y3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb2R1Y3QuaWQgPT0gaXRlbWlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYWluLmlubmVySFRNTCA9IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2JyxcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdpbWcnLCBudWxsLCBudWxsLCB7J3NyYyc6IHByb2R1Y3RbJ2ltZyddfSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdkaXYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRE9NY3JlYXRvcignaDMnLCBwcm9kdWN0Wydtb2RlbCddKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdwJywgcHJvZHVjdFsnZGVzY3JpcHRpb24nXSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRE9NY3JlYXRvcignYnV0dG9uJywgJ1RvIENhcnQgJyArIHByb2R1Y3RbJ3ByaWNlJ10sICdhZGRidXR0b24nLCBudWxsLCBpdGVtaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsICdjb250ZW50JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCAnY29udGVudF93cmFwcGVyJykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgdmlldztcbiIsIi8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21haW4nKS5hcHBlbmRDaGlsZChwYXJzZXIucGFyc2VGcm9tU3RyaW5nKERPTWNyZWF0b3IoJ2RpdicsICdzbXRoJywpLCAndGV4dC9odG1sJykucXVlcnlTZWxlY3RvcigndGFnX29mX0RPTV9lbGVtZW50JykpXG5cbmZ1bmN0aW9uIERPTWNyZWF0b3IodGFnLCBjb250ZW50ID0gbnVsbCwgc2V0X2NsYXNzID0gbnVsbCwgc2V0X2F0dHIgPSBudWxsLCBzZXRpZCA9IG51bGwpIHtcbiAgICBsZXQgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgaWYgKHNldF9jbGFzcykge1xuICAgICAgICBsZXQgdGVtcCA9IHNldF9jbGFzcy5zcGxpdCgnICcpO1xuICAgICAgICB0ZW1wLmZvckVhY2goKGNsYXNzbmFtZSkgPT4ge1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LmFkZChjbGFzc25hbWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGNvbnRlbnQpIHtcbiAgICAgICAgZWwuaW5uZXJIVE1MID0gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHNldGlkKSB7XG4gICAgICAgIGVsLmlkID0gc2V0aWQ7XG4gICAgfVxuICAgIGlmIChzZXRfYXR0cikge1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gc2V0X2F0dHIpIHtcbiAgICAgICAgICAgIGVsLnNldEF0dHJpYnV0ZShrZXksIHNldF9hdHRyW2tleV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlbC5vdXRlckhUTUw7XG59XG5leHBvcnQgZGVmYXVsdCBET01jcmVhdG9yO1xuLy8gbGV0IGJ1dHRvbm4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2F0YWxvZycpXG4vL1xuLy8gYnV0dG9ubi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+XG4vLyAgICAgZmV0Y2goJ2h0dHBzOi8vYXF1ZW91cy1zaGVsZi01NDg0OC5oZXJva3VhcHAuY29tLycsKVxuLy8gICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbi8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbi8vICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4vLyAgICAgICAgIH0pXG4vLyAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4vLyAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbi8vICAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtYWluIC5jb250YWluZXIgLmNhdGFsb2cuanVzdF9kcm9wcGVkJykgPT0gbnVsbCl7XG4vLyAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbiAuY29udGFpbmVyJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZENoaWxkKHBhcnNlci5wYXJzZUZyb21TdHJpbmcoXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdkaXYnLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIERPTWNyZWF0b3IoJ2RpdicsXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERPTWNyZWF0b3IoJ2RpdicsbnVsbCwnd3JhcHBlcicpXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICxcImNhcm91c2VsXCIpLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjYXRhbG9nIGp1c3RfZHJvcHBlZCcgKVxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgLCAndGV4dC9odG1sJykucXVlcnlTZWxlY3RvcignLmNhdGFsb2cnKSlcbi8vICAgICAgICAgICAgIH1cbi8vXG4vLyAgICAgICAgICAgICBkYXRhWydqdXN0X2Ryb3BwZWQnXS5mb3JFYWNoKChwcm9kdWN0KSA9Pntcbi8vICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud3JhcHBlcicpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmRDaGlsZChwYXJzZXIucGFyc2VGcm9tU3RyaW5nKCBET01jcmVhdG9yKCdkaXYnLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgRE9NY3JlYXRvcignaW1nJyxudWxsLG51bGwseydzcmMnOnByb2R1Y3RbJ2ltZyddLCdhbHQnOnByb2R1Y3RbJ21vZGVsJ119KStcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIERPTWNyZWF0b3IoJ2JyJykrXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdoMycscHJvZHVjdFsnYnJhbmQnXSkrXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBET01jcmVhdG9yKCdicicpK1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgRE9NY3JlYXRvcignaDInLHByb2R1Y3RbJ21vZGVsJ10pK1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgRE9NY3JlYXRvcignYnInKStcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIERPTWNyZWF0b3IoJ3AnLHByb2R1Y3RbJ3ByaWNlJ10pLCdpdGVtJyxudWxsLCdpdGVtXycrcHJvZHVjdFsnaWQnXSksICd0ZXh0L2h0bWwnKVxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJ2RpdicpKVxuLy8gICAgICAgICAgICAgfSlcbi8vICAgICAgICAgfSlcbi8vIClcbi8vXG4vKiAvZ2V0IGluZm9cXCAqL1xuLy9mZXRjaCgnL2dldCcpLnRoZW4oKHJlc3BvbnNlKT0+e1xuLy8gICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbi8vICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpfSkudGhlbigoZGF0YSk9Pntcbi8vICAgICAgICAgY29uc29sZS5sb2coZGF0YVtcImp1c3RfZHJvcHBlZFwiXSl9KVxuXG4iXSwic291cmNlUm9vdCI6IiJ9