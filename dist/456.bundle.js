(self.webpackChunk_5=self.webpackChunk_5||[]).push([[456],{456:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>l});var n=t(617);const l=function(){let e=document.querySelector("main .container"),r=document.querySelector("header");fetch("https://server-for-okr.herokuapp.com/").then((e=>(console.log(e),e.json()))).then((t=>{r.innerHTML="",e.innerHTML=(0,n.Z)("h3","IN CART")+(0,n.Z)("div",(0,n.Z)("div",(0,n.Z)("div",null,"wrapper"),"carousel"),"catalog slides"),0===JSON.parse(window.localStorage.getItem("order")).cart.length&&(e.querySelector(".wrapper").innerHTML=(0,n.Z)("div",(0,n.Z)("h2","EMPTY"),"item",{style:"width: 100%"}));for(let r in JSON.parse(window.localStorage.getItem("order")).cart){console.log("print i "+r);for(let l in t)t[l].forEach((t=>{JSON.parse(window.localStorage.getItem("order")).cart[r][0]===t.id&&(e.querySelector(".wrapper").innerHTML+=(0,n.Z)("div",(0,n.Z)("a",(0,n.Z)("img",null,null,{src:t.img,alt:t.model}),null,{href:t.url})+(0,n.Z)("br")+(0,n.Z)("h2",t.brand)+(0,n.Z)("br")+(0,n.Z)("h3",t.model)+(0,n.Z)("br")+(0,n.Z)("p",t.price)+(0,n.Z)("button","REMOVE","removebutton",null,""+t.id),"item",null,"item_"+t.id))}))}if(0!==JSON.parse(window.localStorage.getItem("order")).cart.length){let e=document.createElement("div");e.innerHTML=(0,n.Z)("a","CONFIRM ORDER",null,{href:"#order"},"confirmorder"),document.querySelector("main #main_container").appendChild(e)}}))}},617:(e,r,t)=>{"use strict";t.d(r,{Z:()=>n});const n=function(e,r=null,t=null,n=null,l=null){let o=document.createElement(e);if(t&&t.split(" ").forEach((e=>{o.classList.add(e)})),r&&(o.innerHTML=r),l&&(o.id=l),n)for(let e in n)o.setAttribute(e,n[e]);return o.outerHTML}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,